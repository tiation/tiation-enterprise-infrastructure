apiVersion: apps/v1
kind: Deployment
metadata:
  name: rigger-web
  namespace: tiation
  labels:
    app: rigger-web
    domain: tiation.online
spec:
  replicas: 2
  selector:
    matchLabels:
      app: rigger-web
  template:
    metadata:
      labels:
        app: rigger-web
    spec:
      containers:
      - name: rigger-web
        image: nginx:alpine
        ports:
        - containerPort: 80
          name: http
        env:
        - name: DOMAIN
          value: "tiation.online"
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        # Custom nginx config for Rigger Platform
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
      volumes:
      - name: nginx-config
        configMap:
          name: rigger-nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rigger-nginx-config
  namespace: tiation
data:
  default.conf: |
    server {
        listen 80;
        server_name tiation.online www.tiation.online;
        root /usr/share/nginx/html;
        index index.html;
        
        location / {
            try_files $uri $uri/ /index.html;
        }
        
        # API proxy (when ready)
        location /api {
            proxy_pass http://rigger-api-service:4000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Health check
        location /health {
            return 200 'OK';
            add_header Content-Type text/plain;
        }
    }
---
apiVersion: v1
kind: Service
metadata:
  name: rigger-web-service
  namespace: tiation
  labels:
    app: rigger-web
spec:
  selector:
    app: rigger-web
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rigger-platform-ingress
  namespace: tiation
  annotations:
    kubernetes.io/ingress.global-static-ip-name: rigger-ip
    networking.gke.io/managed-certificates: rigger-platform-ssl-cert
    kubernetes.io/ingress.class: gce
spec:
  rules:
  - host: tiation.online
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: rigger-web-service
            port:
              number: 80
  - host: www.tiation.online
    http:
      paths:
      - path: /*
        pathType: ImplementationSpecific
        backend:
          service:
            name: rigger-web-service
            port:
              number: 80
---
apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: rigger-platform-ssl-cert
  namespace: tiation
spec:
  domains:
    - tiation.online
    - www.tiation.online