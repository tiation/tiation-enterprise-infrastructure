---
# Production Environment Inventory
all:
  children:
    # Web Application Servers
    web_servers:
      hosts:
        web-prod-01:
          ansible_host: 10.0.1.10
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: web
          environment: production
          backup_enabled: true
          monitoring_enabled: true
          
        web-prod-02:
          ansible_host: 10.0.1.11
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: web
          environment: production
          backup_enabled: true
          monitoring_enabled: true
          
      vars:
        nginx_worker_processes: 4
        nginx_worker_connections: 1024
        ssl_certificate_path: /etc/ssl/certs/tiation.crt
        ssl_certificate_key_path: /etc/ssl/private/tiation.key

    # Database Servers
    database_servers:
      hosts:
        db-prod-01:
          ansible_host: 10.0.2.10
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: database
          environment: production
          backup_enabled: true
          monitoring_enabled: true
          mysql_root_password: "{{ vault_mysql_root_password }}"
          
        db-prod-02:
          ansible_host: 10.0.2.11
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: database
          environment: production
          backup_enabled: true
          monitoring_enabled: true
          mysql_root_password: "{{ vault_mysql_root_password }}"
          
      vars:
        mysql_innodb_buffer_pool_size: 1G
        mysql_max_connections: 200
        mysql_slow_query_log_enabled: true
        mysql_replication_user: "{{ vault_mysql_replication_user }}"
        mysql_replication_password: "{{ vault_mysql_replication_password }}"

    # Load Balancers
    load_balancers:
      hosts:
        lb-prod-01:
          ansible_host: 10.0.3.10
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: load_balancer
          environment: production
          backup_enabled: false
          monitoring_enabled: true
          
      vars:
        haproxy_backend_servers:
          - { name: "web-prod-01", address: "10.0.1.10:80", check: "check" }
          - { name: "web-prod-02", address: "10.0.1.11:80", check: "check" }

    # Monitoring Servers
    monitoring_servers:
      hosts:
        monitor-prod-01:
          ansible_host: 10.0.4.10
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: monitoring
          environment: production
          backup_enabled: true
          monitoring_enabled: false
          
      vars:
        prometheus_retention_time: 30d
        grafana_admin_password: "{{ vault_grafana_admin_password }}"
        alertmanager_smtp_from: "alerts@tiation.com"
        alertmanager_smtp_smarthost: "smtp.gmail.com:587"

    # Container Hosts
    docker_hosts:
      hosts:
        docker-prod-01:
          ansible_host: 10.0.5.10
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: container
          environment: production
          backup_enabled: true
          monitoring_enabled: true
          
        docker-prod-02:
          ansible_host: 10.0.5.11
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/production_key
          server_role: container
          environment: production
          backup_enabled: true
          monitoring_enabled: true
          
      vars:
        docker_compose_version: "2.20.0"
        docker_users: ["ubuntu", "deploy"]
        docker_daemon_options:
          log-driver: "json-file"
          log-opts:
            max-size: "100m"
            max-file: "3"

    # Development Servers
    development_servers:
      hosts:
        dev-01:
          ansible_host: 10.0.6.10
          ansible_user: ubuntu
          ansible_ssh_private_key_file: ~/.ssh/development_key
          server_role: development
          environment: development
          backup_enabled: false
          monitoring_enabled: true
          
      vars:
        nodejs_version: "18.x"
        python_version: "3.9"
        go_version: "1.19"

  # Global Variables
  vars:
    # Security Settings
    security_ssh_port: 22
    security_ssh_password_authentication: false
    security_ssh_permit_root_login: false
    security_ssh_usedns: false
    security_ssh_permit_empty_passwords: false
    security_ssh_challenge_response_auth: false
    security_ssh_gss_api_authentication: false
    security_ssh_x11_forwarding: false
    security_ssh_max_auth_tries: 3
    security_ssh_client_alive_interval: 300
    security_ssh_client_alive_count_max: 2
    security_ssh_login_grace_time: 30
    security_ssh_max_sessions: 10
    security_ssh_max_startups: "10:30:60"
    security_ssh_banner: /etc/issue.net
    
    # Firewall Settings
    security_firewall_allowed_tcp_ports:
      - "22"
      - "80"
      - "443"
      - "8080"
      - "9090"  # Prometheus
      - "3000"  # Grafana
      
    # Backup Settings
    backup_retention_days: 30
    backup_schedule: "0 2 * * *"  # 2 AM daily
    backup_destination: "s3://tiation-backups"
    
    # Monitoring Settings
    monitoring_slack_webhook: "{{ vault_monitoring_slack_webhook }}"
    monitoring_email_recipients: ["admin@tiation.com", "ops@tiation.com"]
    
    # SSL/TLS Settings
    ssl_protocols: "TLSv1.2 TLSv1.3"
    ssl_ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384"
    ssl_prefer_server_ciphers: true
    ssl_stapling: true
    ssl_stapling_verify: true
    
    # Performance Settings
    timezone: "Australia/Perth"
    ntp_servers:
      - "0.au.pool.ntp.org"
      - "1.au.pool.ntp.org"
      - "2.au.pool.ntp.org"
      - "3.au.pool.ntp.org"
